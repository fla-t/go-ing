version: "3.9"

services:
  # PostgreSQL for User Service
  userservice-db:
    container_name: userservice_db
    image: postgres:15
    environment:
      POSTGRES_DB: userservice_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d userservice_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgreSQL for Booking Service
  bookingservice-db:
    container_name: bookingservice_db
    image: postgres:15
    environment:
      POSTGRES_DB: bookingservice_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d bookingservice_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # User Service
  userservice:
    container_name: user_service
    build:
      context: .
      dockerfile: ops/UserService.Dockerfile
    ports:
      - "50051:50051"
    networks:
      - app-network
    environment:
      - DATABASE_URL=postgres://user:password@userservice-db:5432/userservice_db?sslmode=disable
    depends_on:
      userservice-db:
        condition: service_healthy

  # Booking Service
  bookingservice:
    container_name: booking_service
    build:
      context: .
      dockerfile: ops/BookingService.Dockerfile
    ports:
      - "50052:50052"
    networks:
      - app-network
    environment:
      - DATABASE_URL=postgres://user:password@bookingservice-db:5432/bookingservice_db?sslmode=disable
      - USER_SERVICE_ADDRESS=userservice:50051
    depends_on:
      bookingservice-db:
        condition: service_healthy
      userservice:
        condition: service_started

networks:
  app-network:
    driver: bridge
